name: Deploy to Artifacts Branch

on:
  push:
    branches:
      - main  # Ejecuta el workflow solo cuando hay un push en la rama main.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Asegura que se pueda trabajar con múltiples ramas.

      # 2. Instalar dependencias y construir el proyecto
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ajusta según la versión de Node.js necesaria.
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      # 3. Crear o limpiar la rama artifacts
      - name: Prepare artifacts branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Elimina la rama artifacts si ya existe
          if git rev-parse --verify origin/artifacts > /dev/null 2>&1; then
            git push origin --delete artifacts
          fi

          # Crea la nueva rama artifacts basada en main
          git checkout -b artifacts

      # 4. Limpiar todo excepto `dist`
      - name: Clean branch and copy dist content
        run: |
          # Elimina todos los archivos rastreados por Git
          git rm -rf . || true
          
          # Copia el contenido de dist a la raíz
          cp -r dist/* .
          
          # Elimina dist y node_modules
          rm -rf dist node_modules

          # Agrega y confirma los cambios
          git add .
          git commit -m "Deploy artifacts from main"

      # 5. Empujar los cambios a la rama artifacts
      - name: Push to artifacts branch
        run: |
          git push origin artifacts --force
